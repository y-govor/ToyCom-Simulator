<!-- Window and TitleBar Style -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- Window Style -->
    <Style TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
    </Style>
    <!-- Window Border Style -->
    <Style x:Key="WindowBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorderBrush}"/>
        <Style.Triggers>
            <!-- Hide border when the window is maximized -->
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                <Setter Property="BorderThickness" Value="0"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- Window Title Style -->
    <Style x:Key="AppWindowTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
    </Style>
    <!-- Caption Buttons Style -->
    <Style x:Key="CaptionButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="RenderOptions.EdgeMode" Value="Unspecified"/>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" SnapsToDevicePixels="True"
                            BorderThickness="0" Background="{DynamicResource PrimaryBackgroundBrush}">
                        <ContentPresenter Margin="0" Focusable="False" RecognizesAccessKey="True"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource CaptionButtonBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource CaptionButtonBackgroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Close Button Style -->
    <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource CaptionButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" SnapsToDevicePixels="True"
                            BorderThickness="0" Background="{DynamicResource PrimaryBackgroundBrush}">
                        <ContentPresenter Margin="0" Focusable="False" RecognizesAccessKey="True"
                                          HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource CloseButtonBackgroundBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource CloseButtonForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{DynamicResource CloseButtonBackgroundBrush}"/>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource CloseButtonForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>